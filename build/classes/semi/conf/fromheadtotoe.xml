<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="fromheadtotoe">

	<typeAlias alias="AdminAccount" type="semi.vo.AdminAccount"/>
	<typeAlias alias="Customer" type="semi.vo.Customer"/>
	<typeAlias alias="PasswordHint" type="semi.vo.PasswordHint"/>
	<typeAlias alias="Event" type="semi.vo.Event"/>
	<typeAlias alias="Notice" type="semi.vo.Notice"/>
	<typeAlias alias="OrderDetail" type="semi.vo.OrderDetail"/>
	<typeAlias alias="Product" type="semi.vo.ProductDetail"/>
	<typeAlias alias="ProductQuestions" type="semi.vo.ProductQuestions"/>
	<typeAlias alias="Category" type="semi.vo.Category"/>
	<typeAlias alias="ProductReviews" type="semi.vo.ProductReviews"/>
	<typeAlias alias="Qna" type="semi.vo.Qna"/>
	<typeAlias alias="Review" type="semi.vo.Review"/>
	<typeAlias alias="AdminComment" type="semi.vo.AdminComment"/>
	<typeAlias alias="ShippingClass" type="semi.vo.ShippingClass"/>
	<typeAlias alias="CartItem" type="semi.vo.CartItem"/>
	<typeAlias alias="PointDetail" type="semi.vo.PointDetail"/>
	<typeAlias alias="ReviewRecommendHistory" type="semi.vo.ReviewRecommendHistory"/>

<!-- *PointDetail [ 시작 ] ############################################################################################################# -->
	<insert id="usePointHistory" parameterClass="PointDetail">
		insert into points_consume_history (consume_amount, order_no, customer_no)
		values (#consumeAmount#, #orderNo#, #custNo#)
	</insert>
	
	<insert id="savePointHistory" parameterClass="PointDetail">
		insert into points_charge_history (charge_amount, order_no, customer_no)
		values (#chargeAmount#, #orderNo#, #custNo#)
	</insert>

	<update id="usePointByCustomer" parameterClass="map">
		update
			customers
		set
			customer_point = customer_point - #point#
		where
			customer_no = #cno#
	</update>
	
	<update id="savePointByCustomer" parameterClass="map">
		update
			customers
		set
			customer_point = customer_point + #point#
		where
			customer_no = #cno#
	</update>

<!-- *PointDetail [ 끝 ] ############################################################################################################# -->

<!-- *admin [ 시작 ] ############################################################################################################# -->

	<select id="getAdminCommentInfoByReviewNo" resultClass="AdminComment" parameterClass="map">
		select
			A.COMMENT_CONTENTS as commentContents
			,A.ADMIN_ACCOUNT_NO as adno
			,C.ADMIN_ACCOUNT_ID as adid
			,D.cnt as cnt
		from
			review_comment A, Product_reviews B, ADMIN_ACCOUNTS C
			,(select
					count(*) as cnt
				from
					review_comment Q, Product_reviews W
				where
					Q.REVIEW_NO = W.REVIEW_NO
					and Q.review_no = #reviewNoOne#) D
		where
			A.REVIEW_NO = B.REVIEW_NO
			and A.ADMIN_ACCOUNT_NO = C.ADMIN_ACCOUNT_NO
			and B.review_no = #reviewNoTwo#
	</select>

<!-- *admin [ 끝 ] ############################################################################################################## -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *customer [ 시작 ] ############################################################################################################ -->


	<delete id="AllDeleteCartItems" parameterClass="int" >
		DELETE from CART_ITEMS where  CUSTOMER_NO =#value#
	</delete>

<update id="CartItemsQtyUpdate" parameterClass="map"  >	
		update
		(select P.PRODUCT_NAME, C.PRODUCT_QTY ,C.PRODUCT_NO
				from CART_ITEMS C , PRODUCTS P 
				where C.PRODUCT_NO = P.PRODUCT_NO
				and C.CUSTOMER_NO=#custNo#) 
				set PRODUCT_QTY = #qty#
		where PRODUCT_No =#productNo#
		</update>
<select id="getCartItemsByCustomerNo" resultClass="CartItem" parameterClass="int">
		select
			C.PRODUCT_NO no,
			NVL(C.PRODUCT_SIZE,'') proSize,
			P.PRODUCT_IMG_PORTRAIT_1 img ,
			P.PRODUCT_NAME name,
			P.PRODUCT_PRICE price,
			C.PRODUCT_QTY qty,
			NVL(C.PRODUCT_COLOR ,'') color,
			P.PRODUCT_POINT point,
			P.PRODUCT_DISCOUNT discount
		
		from
			CART_ITEMS C , PRODUCTS P
		where
			C.PRODUCT_NO = P.PRODUCT_NO
		AND
			CUSTOMER_NO =#value#
	</select>

	<delete id="deleteCartItemsByProductNo" parameterClass="map" >
	DELETE 
		from CART_ITEMS 
	where	
		PRODUCT_No =#productNo#
	and 
		CUSTOMER_NO =#custno#
	</delete>

	<select id="quesstion" resultClass="PasswordHint" >
		select
			QUESTION_NO questionNo, 
			QUESTION_CONTENTS questionContents
		from
			PASSWORD_QUESTIONS
	</select>


	<select id="myQuestion" resultClass="PasswordHint" parameterClass="int" >
		SELECT
			ph.CUSTOMER_NO customerNo,
			ph.QUESTION_NO questionNo,
			ph.HINT_ANSWER answer,
			pq.QUESTION_CONTENTS questionContents
		from
 			PASSWORD_QUESTIONS pq,PASSWORD_HINT ph
		where 
			pq.QUESTION_NO = ph.QUESTION_NO
		and 
			ph.CUSTOMER_NO = #value#
		
	</select>

	<insert id="addCustomerHint" parameterClass="PasswordHint">
			insert into PASSWORD_HINT
				(CUSTOMER_NO, QUESTION_NO,HINT_ANSWER)
			values
				(CUSTOMER_SEQ.CURRVAL,#questionNo#,#answer#)
	</insert>
	
	<insert id="addCustomer" parameterClass="Customer">
		insert into CUSTOMERS
			(CUSTOMER_NO, 
			 CUSTOMER_ID, 
			 CUSTOMER_PWD, 
			 CUSTOMER_NAME, 
			 CUSTOMER_TEL, 
			 CUSTOMER_EMAIL, 
			 CUSTOMER_STATUS, 
			 CUSTOMER_POSTCODE, 
			 CUSTOMER_ADDRESS_1, 
			 CUSTOMER_ADDRESS_2, 
			 CUSTOMER_GRADE,
			 CUSTOMER_POINT,
			 CREATE_DATE )
		values 
			(
			CUSTOMER_SEQ.nextval,
			#id#,
			#pwd#,
			#name#,
			#tel#,
			#email#,
			'정상',
			#postcode#,
			#firstAddress#,
			#secondAddress#,
			'BRONZE',
			#point#,
			sysdate)
	</insert>
	
	<select id="login" parameterClass="String" resultClass="Customer">
		select
			CUSTOMER_NO no, 
			 CUSTOMER_ID id, 
			 CUSTOMER_PWD pwd, 
			 CUSTOMER_NAME name, 
			 CUSTOMER_TEL tel, 
			 CUSTOMER_EMAIL email, 
			 CUSTOMER_STATUS status, 
			 CUSTOMER_POSTCODE postcode, 
			 CUSTOMER_ADDRESS_1 firstAddress, 
			 CUSTOMER_ADDRESS_2 secondAddress, 
			 CUSTOMER_GRADE grade,
			 CUSTOMER_POINT point,
			 CREATE_DATE createDate
		from
			CUSTOMERS
		where
			CUSTOMER_ID=#value#	
	</select>
	
	<update id="deleteCustomr" parameterClass="String" >
		Update 
			CUSTOMERS 
		set
			CUSTOMER_STATUS ='탈퇴'
		where 
			CUSTOMER_ID=#value#
	</update>
	
    <select id="getCustomerByEmail" parameterClass="String" resultClass="Customer">
	    	select
				CUSTOMER_ID  id, 
				 CUSTOMER_EMAIL email,
				CUSTOMER_NAME  name,
				CREATE_DATE createDate
			from
				CUSTOMERS
			where
				CUSTOMER_EMAIL=#value#	
    </select>
    
    <select id="allCustomer" resultClass="Customer">
			select
				 CUSTOMER_NO no, 
				 CUSTOMER_ID id, 
				 CUSTOMER_PWD pwd, 
				 CUSTOMER_NAME name, 
				 CUSTOMER_TEL tel, 
				 CUSTOMER_EMAIL email, 
				 CUSTOMER_STATUS status, 
				 CUSTOMER_POSTCODE postcode, 
				 CUSTOMER_ADDRESS_1 firstAddress, 
				 CUSTOMER_ADDRESS_2 secondAddress, 
				 CUSTOMER_GRADE grade,
				 CUSTOMER_POINT point,
				 CREATE_DATE createDate
			from
				CUSTOMERS
	</select>
	
	<select id="getCustomerByName" resultClass="Customer" parameterClass="string">
		select
			CUSTOMER_NO no, 
			CUSTOMER_ID id, 
			CUSTOMER_PWD pwd, 
			CUSTOMER_NAME name, 
			CUSTOMER_TEL tel, 
			CUSTOMER_EMAIL email, 
			CUSTOMER_STATUS status, 
			CUSTOMER_POSTCODE postcode, 
			CUSTOMER_ADDRESS_1 firstAddress, 
			CUSTOMER_ADDRESS_2 secondAddress, 
			CUSTOMER_GRADE grade,
			CUSTOMER_POINT point,
			CREATE_DATE createDate
		from
			CUSTOMERS
		where
			customer_name = #value#
	</select>
	
	
	<update id="modifyCoustomer" parameterClass="Customer" >
		Update 
			CUSTOMERS 
		set
			CUSTOMER_PWD  = #pwd#,
			CUSTOMER_POSTCODE  =  #postcode#,
			CUSTOMER_ADDRESS_1  =  #firstAddress#,
			CUSTOMER_ADDRESS_2   =  #secondAddress#,
			CUSTOMER_TEL   =  #tel#, 
			CUSTOMER_EMAIL   =  #email#
			
		where 
			CUSTOMER_ID=#id#
	</update>
	
	<update id="modifyHint" parameterClass="PasswordHint" >
		Update
			PASSWORD_HINT
		set
			QUESTION_NO   =#questionNo#,
			HINT_ANSWER   = #answer#
		
		where
			CUSTOMER_NO=#questionNo#	
				
	</update>
	

	

    <select id="allsearch" resultClass="Customer">
		select
			CUSTOMER_NO no, 
			 CUSTOMER_ID id, 
			 CUSTOMER_PWD pwd, 
			 CUSTOMER_NAME name, 
			 CUSTOMER_TEL tel, 
			 CUSTOMER_EMAIL email, 
			 CUSTOMER_STATUS status, 
			 CUSTOMER_POSTCODE postcode, 
			 CUSTOMER_ADDRESS_1 firstAddress, 
			 CUSTOMER_ADDRESS_2 secondAddress, 
			 CUSTOMER_GRADE grade,
			 CUSTOMER_POINT point,
			 CREATE_DATE cust_createdate
		from
			CUSTOMERS
	</select>
	
	<select id="getCustomerById" parameterClass="int" resultClass="Customer">
		select
			CUSTOMER_NO as no, 
			 CUSTOMER_ID as id, 
			 CUSTOMER_PWD as pwd, 
			 CUSTOMER_NAME as name, 
			 CUSTOMER_TEL as tel, 
			 CUSTOMER_EMAIL as email, 
			 CUSTOMER_STATUS as status, 
			 CUSTOMER_POSTCODE as postcode, 
			 CUSTOMER_ADDRESS_1 as firstAddress, 
			 CUSTOMER_ADDRESS_2 as secondAddress, 
			 CUSTOMER_GRADE as grade,
			 CUSTOMER_POINT as point,
			 CREATE_DATE as cust_createdate
		from
			CUSTOMERS
		where CUSTOMER_NO = #value#
	</select>
	
	<select	id="getShippingClassByNo" parameterClass="int" resultClass="ShippingClass">
		select 
			SHIPPING_CLASS_NO		as shippingClassNo,
			CUSTOMER_NO 			as customerNo, 
			SHIPPING_RECEIVER_NAME 	as receiverName, 
			SHIPPING_POSTCODE		as postcode, 
			SHIPPING_ADDRESS_1 		as firstAddress, 
			SHIPPING_ADDRESS_2 		as secondAddress, 
			SHIPPING_TEL 			as tel, 
			SHIPPING_MESSAGE 		as message, 
			SHIPPING_CLASS_NAME 	as shippingClassName
		from 
			SHIPPING_CLASS
		WHERE 			
			CUSTOMER_NO =#value#
	</select>
	<insert id="addShippingClassByCustomerNo" parameterClass="ShippingClass">
		insert into SHIPPING_CLASS(
			CUSTOMER_NO, 
			SHIPPING_RECEIVER_NAME, 
			SHIPPING_POSTCODE, 
			SHIPPING_ADDRESS_1, 
			SHIPPING_ADDRESS_2, 
			SHIPPING_TEL, 
			SHIPPING_MESSAGE, 
			SHIPPING_CLASS_NAME,
			SHIPPING_CLASS_NO
			)
			values(CUSTOMER_SEQ.CURRVAL, #receiverName#, #postcode#, #firstAddress#, #secondAddress#, #tel#, #message#, #shippingClassName#, shipping_class_seq.nextval)
	</insert>
	<insert id="addShippingClass" parameterClass="ShippingClass">
		insert into SHIPPING_CLASS(
			CUSTOMER_NO, 
			SHIPPING_RECEIVER_NAME, 
			SHIPPING_POSTCODE, 
			SHIPPING_ADDRESS_1, 
			SHIPPING_ADDRESS_2, 
			SHIPPING_TEL, 
			SHIPPING_MESSAGE, 
			SHIPPING_CLASS_NAME,
			SHIPPING_CLASS_NO
			)
		values(#customerNo#, #receiverName#, #postcode#, #firstAddress#, #secondAddress#, #tel#, #message#, #shippingClassName#, shipping_class_seq.nextval)
	</insert>
	
	<delete id="delShippingClass" parameterClass="int">
		delete from SHIPPING_CLASS
		where
			SHIPPING_CLASS_NO = #value#
	</delete>
	
	<select id="getCustomerByReviewNo" parameterClass="int" resultClass="Customer">
	 	select
			A.customer_no as no
			,A.customer_id as id
			,A.customer_pwd as pwd
			,A.customer_name as name
			,A.customer_tel as tel
			,A.customer_email as email
			,A.customer_status as status
			,A.customer_postcode as postcode
			,A.customer_address_1 as firstAddress
			,A.customer_address_2 as secondAddress
			,A.customer_grade as grade
			,A.customer_point as point
			,A.create_date as createDate
		from
			customers A, product_reviews B
		where
			A.CUSTOMER_NO = B.CUSTOMER_NO
			and B.review_no = #value#
	 </select>
<!-- *customer [ 끝 ] ############################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *event [ 시작 ] ############################################################################################################# -->

	<select id="getAllEvents" resultClass="Event">
		select
			E.event_no				as no
			, E.event_subject		as subject
			, E.create_date			as createDate
			, A.admin_account_id	as adminName
			, E.event_banner		as banner
		from
			events E, admin_accounts A
		where
			E.admin_account_no = A.admin_account_no
	</select>
	
	<select id="getDetailEvent" parameterClass="int" resultClass="Event">
		select
			E.event_no				as no
			, E.event_subject		as subject
			, E.create_date			as createDate
			, A.admin_account_id	as adminName
			, E.event_banner		as banner
			, E.event_viewcount		as viewCount
			, E.event_contents		as contents
		from
			events E, admin_accounts A
		where
			E.admin_account_no = A.admin_account_no
		and E.event_no = #value#
	</select>
	
	<update id="eventCountByNo" parameterClass="int">
		update
			events
		set
			event_viewcount = event_viewcount + 1
		where
			event_no = #value#
	</update>
	
	<select id="getNextEvent" parameterClass="int" resultClass="Event">
		select
			event_no		as no
			,event_subject	as subject
		from
			events
		where event_no in(
			(select
				min(event_no)
			from
				events
			where
				event_no > #value#)
			)
	</select>
	
	<select id="getPrevEvent" parameterClass="int" resultClass="Event">
		select
			event_no		as no
			,event_subject	as subject
		from
			events
		where event_no in(
			(select
				max(event_no)
			from
				events
			where
				event_no &lt; #value#)
			)
	</select>

<!-- *event [ 끝 ] ############################################################################################################## -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *notice [ 시작 ] ############################################################################################################# -->

	<select id="getAllNotice" resultClass="Notice">
		select
			N.notice_no				as no
			, A.admin_account_id	as adminId
			, N.notice_subject		as subject
			, N.notice_viewcount	as viewCount
			, N.create_date			as createDate
		from
			notices N, admin_accounts A
		where
			N.admin_account_no = A.admin_account_no
	</select>
	
	<select id="getNoticeCounts" resultClass="int">
		select
			count(*)	as cnt
		from
			notices
	</select>
	
	<select id="getNoticeByRange" parameterClass="map" resultClass="Notice">
		select
			no
			, adminId
			, subject
			, viewCount
			, createDate
		from
			(select
				row_number() over (order by N.notice_no desc) rn
				, N.notice_no			as no
				, A.admin_account_id	as adminId
				, N.notice_subject		as subject
				, N.notice_viewcount	as viewCount
				, N.create_date			as createDate
			from
				notices N, admin_accounts A
			where
				N.admin_account_no = A.admin_account_no)
		where
			rn >= #begin# and rn &lt;= #end#
	</select>
	
	<select id="getSearchNoticeCountsBySubject" parameterClass="string" resultClass="int">
		select
			count(*)	as cnt
		from
			notices
		where
			notice_subject like '%' || #value# || '%'
	</select>
	
	<select id="getSearchNoticeBySubject" parameterClass="map" resultClass="Notice">
		select
			no
			, adminId
			, subject
			, viewCount
			, createDate
		from
			(select
				row_number() over (order by N.notice_no desc) rn
				, N.notice_no			as no
				, A.admin_account_id	as adminId
				, N.notice_subject		as subject
				, N.notice_viewcount	as viewCount
				, N.create_date			as createDate
			from
				notices N, admin_accounts A
			where
				N.admin_account_no = A.admin_account_no
			and N.notice_subject like '%' || #keyword# || '%')
		where
			rn >= #begin# and rn &lt;= #end#
	</select>
	
	<select id="getSearchNoticeCountsByName" parameterClass="string" resultClass="int">
		select
			count(*)	as cnt
		from
			notices N, admin_accounts A
		where
			A.admin_account_id like '%' || #value# || '%'
	</select>
	
	<select id="getSearchNoticeByName" parameterClass="map" resultClass="Notice">
		select
			no
			, adminId
			, subject
			, viewCount
			, createDate
		from
			(select
				row_number() over (order by N.notice_no desc) rn
				, N.notice_no			as no
				, A.admin_account_id	as adminId
				, N.notice_subject		as subject
				, N.notice_viewcount	as viewCount
				, N.create_date			as createDate
			from
				notices N, admin_accounts A
			where
				N.admin_account_no = A.admin_account_no
			and A.admin_account_id like '%' || #keyword# || '%')
		where
			rn >= #begin# and rn &lt;= #end#
	</select>
	
	<select id="getDetailNotice" parameterClass="int" resultClass="Notice">
		select
			N.notice_no				as no
			, A.admin_account_id	as adminId
			, N.notice_subject		as subject
			, N.notice_viewcount	as viewCount
			, N.create_date			as createDate
			, N.notice_contents		as contents
		from
			notices N, admin_accounts A
		where
			N.admin_account_no = A.admin_account_no
		and N.notice_no = #value#
	</select>
	
	<update id="noticeCountByNo" parameterClass="int">
		update
			notices
		set
			notice_viewcount = notice_viewcount + 1
		where
			notice_no = #value#
	</update>
	
	<select id="getNextNotice" parameterClass="int" resultClass="Notice">
		select
			notice_no		as no
			,notice_subject	as subject
		from
			notices
		where notice_no in(
			(select
				min(notice_no)
			from
				notices
			where
				notice_no > #value#)
			)
	</select>
	
	<select id="getPrevNotice" parameterClass="int" resultClass="Notice">
		select
			notice_no		as no
			,notice_subject	as subject
		from
			notices
		where notice_no in(
			(select
				max(notice_no)
			from
				notices
			where
				notice_no &lt; #value#)
			)
	</select>

<!-- *notice [ 끝 ] ############################################################################################################## -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *order [ 시작 ] ############################################################################################################## -->

<select id="getchargeconsumePoint" parameterClass="int" resultClass="semi.vo.PointDetail">
		select 
			NVL(sum(c.customer_point),0) as customerPoint,
			NVL(sum(con.CONSUME_amount),0) as productPoint,
			NVL(sum(cha.CHARGE_amount),0) as usedPoint
		from
		customers C, orders O, POINTS_CHARGE_HISTORY CHA,POINTS_CONSUME_HISTORY CON
		where c.customer_no=o.customer_no
		and o.order_no = cha.order_no
		and o.order_no = con.order_no
		and c.customer_no =#value#
	</select>
	
	
	<select id="getOrderlist" parameterClass="Map" resultClass="OrderDetail">
		select 
			o.order_no as orderNo,
			o.order_date as orderDate,
			p.product_img_big as orderImage,
			p.product_name as productName,
			d.order_qty as orderQty,
			o.order_status as orderStatus,
			p.product_price as orderPrice,
			o.order_cancel as orderCalcelDate
			
		from
		orders O, products P, order_detail D, customers C
		where o.order_no = d.order_no
		and o.customer_no = c.customer_no
		and d.product_no = p.product_no
		and c.customer_no = #customer#
		and o.order_date >= to_date(#begin#, 'yyyy-mm-dd HH24:mi:ss')
		and o.order_date &lt;= to_date(#end#, 'yyyy-mm-dd HH24:mi:ss')
	</select>
	
	<select id="getOrderListCount" parameterClass="map" resultClass="int">
		select 
			count(*) as cnt
		from
			orders O, products P, order_detail D, customers C
		where
			o.order_no = d.order_no
		and o.customer_no = c.customer_no
		and d.product_no = p.product_no
		and c.customer_no = #customer#
		and o.order_date >= to_date(#begin#, 'yyyy-mm-dd HH24:mi:ss')
		and o.order_date &lt;= to_date(#end#, 'yyyy-mm-dd HH24:mi:ss')
	</select>
	
	<select id="getOrderListByPage" parameterClass="map" resultClass="OrderDetail">
		select
			orderNo,
			orderDate,
			orderImage,
			productName,
			orderQty,
			orderStatus,
			orderPrice,
			orderCalcelDate,
			productNo
		from	
			(select 
				row_number() over (order by o.order_no desc) rn,
				o.order_no as orderNo,
				o.order_date as orderDate,
				p.product_img_big as orderImage,
				p.product_name as productName,
				d.order_qty as orderQty,
				o.order_status as orderStatus,
				p.product_price as orderPrice,
				o.order_cancel as orderCalcelDate,
				p.product_no as productNo
			from
				orders O, products P, order_detail D, customers C
			where
				o.order_no = d.order_no
			and o.customer_no = c.customer_no
			and d.product_no = p.product_no
			and c.customer_no = #customer#
			and o.order_date >= to_date(#begin#, 'yyyy-mm-dd HH24:mi:ss')
			and o.order_date &lt;= to_date(#end#, 'yyyy-mm-dd HH24:mi:ss'))
		where
			rn >= #beginIndex# and rn &lt;= #endIndex#
	</select>

	<update id="orderCancel" parameterClass="int">
		update orders set order_status = '주문취소' , order_cancel = sysdate
		where order_no = #value#
	</update>
	
		<select id="getOrderlistAll" resultClass="OrderDetail">
	select 
			o.order_no as orderNo,
			o.order_date as orderDate,
			p.product_img_big as orderImage,
			p.product_name as productName,
			d.order_qty as orderQty,
			o.order_status as orderStatus,
			o.order_status as orderCancel
			
		from
		orders O, products P, order_detail D, customers C
		where o.order_no = d.order_no
		and o.customer_no = c.customer_no
		and d.product_no = p.product_no
	</select>
	
	
	<update id="updatecancel" parameterClass="int">
		update orders set order_status = '주문취소' , order_cancel=sysdate
		where order_no = #value#
	
	</update>
	
	<select id="ordercount" parameterClass="map" resultClass="int">
		select count(*) from orders 
		where customer_no=#no#
		and order_status != '주문취소'
		and order_date >= to_date(#begin#, 'yyyy-mm-dd HH24:mi:ss')
		and order_date &lt;= to_date(#end#, 'yyyy-mm-dd HH24:mi:ss')
	</select>
	
	
	<select id="cancelcount" parameterClass="map" resultClass="int">
		select count(*) from orders 
		where customer_no=#no#
		and order_status = '주문취소'
		and order_date >= to_date(#begin#, 'yyyy-mm-dd HH24:mi:ss')
		and order_date &lt;= to_date(#end#, 'yyyy-mm-dd HH24:mi:ss')
	</select>
	
	<insert id="addOrder" parameterClass="OrderDetail">
		insert into orders (order_no, customer_no, order_date, order_status)
		values (#orderNo#, #customerNo#, sysdate, '접수대기')
	</insert>
	
	<insert id="addOrderDetail" parameterClass="OrderDetail">
		insert into order_detail (order_no, product_no, order_qty, product_color, product_size)
		values (#orderNo#, #productNo#, #orderQty#, #productColor#, #productSize#)
	</insert>
	
	<select id="getCartItemByMap" parameterClass="map" resultClass="CartItem">
		select
			C.PRODUCT_NO no,
			NVL(C.PRODUCT_SIZE,'') proSize,
			P.PRODUCT_IMG_PORTRAIT_1 img ,
			P.PRODUCT_NAME name,
			P.PRODUCT_PRICE price,
			C.PRODUCT_QTY qty,
			NVL(C.PRODUCT_COLOR ,'') color,
			P.PRODUCT_POINT point,
			P.PRODUCT_DISCOUNT discount
		
		from
			CART_ITEMS C , PRODUCTS P
		where
			C.PRODUCT_NO = P.PRODUCT_NO
		AND
			C.CUSTOMER_NO =#cno#
		and 
			C.product_no = #t#
	</select>
	
	<select id="getOrderSeq" resultClass="int">
		select
			order_seq.nextval
		from
			dual
	</select>
	
	<delete id="deleteCartItem" parameterClass="int">
		delete from cart_items
		where
			product_no = #value#
	</delete>
	
	
	<select id="daysearch" parameterClass="map" resultClass="OrderDetail">
		select
			o.order_no as orderNo,
				o.order_date as orderDate,
				p.product_img_big as orderImage,
				p.product_name as productName,
				d.order_qty as orderQty,
				o.order_status as orderStatus,
				o.order_status as orderCancel
				
			from
			orders O, products P, order_detail D, customers C
			where o.order_no = d.order_no
			and o.customer_no = c.customer_no
			and d.product_no = p.product_no
			and o.order_date >= to_date(#begin#, 'yyyy-mm-dd')
			and o.order_date &lt;= to_date(#end#, 'yyyy-mm-dd')
		</select>
<!-- *order [ 끝 ] ############################################################################################################### -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *product [ 시작 ] ############################################################################################################# -->
 
 
<!-- *김유호 시작 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
 	
	<resultMap class="java.util.HashMap" id="product-detail">
		<result property="productNo" 	column="productNo" />
		<result property="imgBig" 		column="imgBig" />
		<result property="imgPortrait1" column="imgPortrait1" />
		<result property="imgPortrait2" column="imgPortrait2" />
		<result property="name" 		column="name" />
		<result property="price" 		column="price" />
		<result property="detail" 		column="detail" />
		<result property="discount" 	column="discount" />
		<result property="createDate" 	column="createDate" />
		<result property="orderQty" 	column="orderQty" />
		<result property="stockQty" 	column="stockQty" />
		<result property="realPrice" 	column="realPrice" />
	</resultMap>
  
  	<select id="getProductsByCategory" parameterClass="map" resultMap="product-detail">
 		select
			product_no				as productNo,
			product_img_big			as imgBig,
			product_img_portrait_1	as imgPortrait1,
			product_img_portrait_2	as imgPortrait2,
			product_name			as name,
			product_price			as price,
			product_detail			as detail,	
			product_discount		as discount,
			create_date				as createDate,
			orderQty,
			stockQty,
			trunc(product_price - (product_price * product_discount / 100),-2)	as realPrice
		from 	(  
				select
					row_number () over (order by $orderBySQL$ $dirSQL$) as rn,
					P.product_no,
					P.product_img_big,
					P.product_img_portrait_1,
					P.product_img_portrait_2,
					P.product_name,
					P.product_price,
					P.product_detail,
					P.product_discount,
					P.create_date,
					nvl(O.order_qty,0)	as	orderQty,
					nvl(PS.stock_qty,0)	as	stockQty
				from 	(  
						select
							product_no,
							sum( product_qty )	as stock_qty
						from
							product_stock
						group by 
							product_no
					 	) PS , 
					 	(
						select 
							category_no
						from 
							categories
						start with 
							category_no = #categoryNo#
						connect by prior 
							category_no = main_category_no
					    ) C , 
					    (
					    select
					    	OD.product_no,
					    	sum( OD.order_qty )	as order_qty
					    from
					   		orders O , order_detail OD
					   	where
					   		O.order_no = OD.order_no
					   	and 
					   		O.order_date >= #orderFrom#
					   	and
					   		O.order_date &lt;= #orderTo#
					   	group by
					   		OD.product_no
					    ) O , products P
				where
					P.product_no = O.product_no(+)
				and
					P.product_no = PS.product_no(+)
				and
					P.product_status = #productStatus#					
				and
					P.category_no = C.category_no
				and
					P.create_date >= #createFrom#
				and
					P.create_date &lt;= #createTo#
			  	)
		where
			stockQty >= #stockCondition#		
		and
			rn >= #startRownum#
		and 
			rn &lt;= #endRownum#
  	</select>
  
	<select id="getProductsSizeByCategory" parameterClass="map" resultClass="int">
		select
			sum( count(product_no) )	as cnt
		from 	(  
				select
					rownum as rn,
					P.product_no,
					P.product_img_big,
					P.product_img_portrait_1,
					P.product_img_portrait_2,
					P.product_name,
					P.product_price,
					P.product_detail,
					P.product_discount,
					P.create_date,
					PS.stock_qty,
					O.order_qty
				from 	(  
						select
							product_no,
							sum( product_qty )	as stock_qty
						from
							product_stock
						group by 
							product_no
					 	) PS , 
					 	(
						select 
							category_no
						from 
							categories
						start with 
							category_no = #categoryNo#
						connect by prior 
							category_no = main_category_no
					    ) C , 
					    (
					    select
					    	OD.product_no,
					    	sum( OD.order_qty )	as order_qty
					    from
					   		orders O , order_detail OD
					   	where
					   		O.order_no = OD.order_no
					   	and 
					   		O.order_date >= sysdate - (365 * 5)
					   	and
					   		O.order_date &lt;= sysdate
					   	group by
					   		OD.product_no
					    ) O , products P
				where
					P.product_no = O.product_no(+)
				and
					P.product_no = PS.product_no(+)
				and
					P.product_status = #productStatus#				
				and
					P.category_no = C.category_no
				and
					P.create_date >= sysdate - (365 * 5)
				and
					P.create_date &lt;= sysdate
			  	)
		where
			rn >= 1
		and 
			rn &lt;= 1000
		group by
			product_no
	</select>
	
	<select id="getCategoriesByLevel" parameterClass="int" resultClass="Category">
		select 
			category_no		as	no,
			category_name	as 	name
		from 
			categories
		where
			level = #level#
		start with 
			main_category_no is null
		connect by prior 
			category_no = main_category_no
	</select>
	
	<select id="getCategoryByNo" parameterClass="int" resultClass="Category">
		select
			category_no		as no,
			category_name	as name
		from
			categories
		where
			category_no = #categoryNo#
	</select>
	
	<select id="getSubCategoriesByNo" parameterClass="int" resultClass="Category">
		select 
			category_no		as no,
			category_name	as name
		from 
			categories
		where
			category_no != #categoryNo#
		start with 
			category_no = #categoryNo#
		connect by prior 
			category_no = main_category_no
	</select>
	
<!-- *김유호 끝 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

	<select id="getProductColorByProNo" parameterClass="int" resultClass="string">
		select 
			DISTINCT color
		from (select
				P.product_no as "no"
				,P.category_no as categoryNo
				,P.product_name as name
				,P.product_price as price
				,P.product_point as "point"
				,P.product_discount as discount
				,P.product_detail as detail
				,P.product_status as status
				,P.product_img_portrait_1 as imgPortrait1
				,P.product_img_portrait_2 as imgPortrait2
				,P.product_img_big as imgBig
				,S.product_color as color
				,S.product_size as "size"
				,S.product_qty as qty
			from
				products P, product_stock S
			where
				P.product_no = S.product_no
				and P.product_no = #value#)
	</select>
	
	<select id="getProductSizeByProNo" parameterClass="int" resultClass="string">
		select 
			DISTINCT "size"
		from (select
				P.product_no as "no"
				,P.category_no as categoryNo
				,P.product_name as name
				,P.product_price as price
				,P.product_point as "point"
				,P.product_discount as discount
				,P.product_detail as detail
				,P.product_status as status
				,P.product_img_portrait_1 as imgPortrait1
				,P.product_img_portrait_2 as imgPortrait2
				,P.product_img_big as imgBig
				,S.product_color as color
				,S.product_size as "size"
				,S.product_qty as qty
			from
				products P, product_stock S
			where
				P.product_no = S.product_no
				and P.product_no = #value#)
	</select>

	<select id="getProductQuestionsByProNo" parameterClass="int" resultClass="ProductQuestions">
		select
			question_no as quesNo
			,product_no as proNo
			,customer_no as custNo
			,question_subject as subject
			,question_contents as contents
			,question_status as status
			,question_password as password
			,question_viewcount as viewcount
			,create_date as createDate
		from
			product_questions
		where
			product_no = #value#
	</select>
	
	<select id="getProductQuestionsByProNoAndRange" parameterClass="map" resultClass="ProductQuestions">
		select
			question_no as quesNo
			,product_no as proNo
			,customer_no as custNo
			,question_subject as subject
			,question_contents as contents
			,question_status as status
			,question_password as password
			,question_viewcount as viewcount
			,create_date as createDate
		from
			(select
				row_number() over (order by create_date desc) rn
				,question_no
				,product_no
				,customer_no
				,question_subject
				,question_contents
				,question_status
				,question_password
				,question_viewcount
				,create_date
			from
				product_questions
			where
				product_no = #proNo#)
		where
			rn >= #beginIndex# and rn &lt;= #endIndex#
	</select>
	
	<select id="getProductReviewsByProNoOrderByNew" resultClass="ProductReviews" parameterClass="int">
		select
			review_no as reviewNo
			,product_no as proNo
			,customer_no as custNo
			,review_contents as contents
			,review_recommend_cnt as recommendCnt
			,review_grade as grade
			,review_status as status
			,create_date as createDate
			,review_img as img
			,review_customer_weight as custWeight
			,review_customer_height as custHeight
			,review_customer_size as custSize
		from
			product_reviews
		where
			product_no = #value#
		order by
			create_date desc
	</select>
	
	<select id="getProductReviewsByProNoOrderByNewAndRange" resultClass="ProductReviews" parameterClass="map">
		select
			review_no as reviewNo
			,product_no as proNo
			,customer_no as custNo
			,review_contents as contents
			,review_recommend_cnt as recommendCnt
			,review_grade as grade
			,review_status as status
			,create_date as createDate
			,review_img as img
			,review_customer_weight as custWeight
			,review_customer_height as custHeight
			,review_customer_size as custSize
		from
			(select 
				row_number() over (order by create_date desc) rn
				,review_no
				,product_no
				,customer_no
				,review_contents
				,review_recommend_cnt
				,review_grade
				,review_status
				,create_date
				,review_img
				,review_customer_weight
				,review_customer_height
				,review_customer_size
			from
				product_reviews
			where
				product_no = #proNo#)
		where
			rn >= #beginIndex# and rn &lt;= #endIndex#
	</select>
	
	<select id="getProductReviewsByProNoOrderbyGrade" resultClass="ProductReviews" parameterClass="int">
		select
			review_no as reviewNo
			,product_no as proNo
			,customer_no as custNo
			,review_contents as contents
			,review_recommend_cnt as recommendCnt
			,review_grade as grade
			,review_status as status
			,create_date as createDate
			,review_img as img
			,review_customer_weight as custWeight
			,review_customer_height as custHeight
			,review_customer_size as custSize
		from
			product_reviews
		where
			product_no = #value#
		order by
			review_grade desc
	</select>
	
	<select id="getProductReviewsByProNoOrderbyWithPic" parameterClass="int" resultClass="ProductReviews">
		select
			review_no as reviewNo
			,product_no as proNo
			,customer_no as custNo
			,review_contents as contents
			,review_recommend_cnt as recommendCnt
			,review_grade as grade
			,review_status as status
			,create_date as createDate
			,review_img as img
			,review_customer_weight as custWeight
			,review_customer_height as custHeight
			,review_customer_size as custSize
		from
			product_reviews
		where
			product_no = #value#
			and review_img is not null
		order by
			review_grade desc
	</select>
	
	<select id="getProductScoreByProNo" resultClass="double" parameterClass="int">
		select
			trunc(avg(review_grade),1) as avg
		from 
			product_reviews
		where
			PRODUCT_NO = #value#
	</select>
	
	<select id="getSoldCountTopThreeProductNo" resultClass="int">
		select 
			product_no as topThree
		from (select row_number ( ) over (order by sum(order_qty) desc) as rn, product_no
				from ORDER_DETAIL
				group by product_no)
		where
			rn &lt;= 3
	</select>
<!-- *product [ 끝 ] ############################################################################################################## -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *qna [ 시작 ] ################################################################################################################ -->

	<select id="getAllQuestions" resultClass="Qna">
		select
			C.customer_name				as custName
			, C.customer_grade			as customerGrade
			, P.product_img_big			as proImg
			, Q.question_no				as quesNo
			, Q.question_subject		as quSubject
			, Q.question_viewcount		as quViewcount
			, Q.create_date				as quCreateDate
		from
			product_questions Q, customers C, products P
		where
			Q.customer_no = C.customer_no
		and Q.product_no = P.product_no
	</select>
	
	<select id="getQnaCounts" resultClass="int">
		select
			count(*)	as cnt
		from
			product_questions
	</select>
	
	<select id="getQnaByRange" parameterClass="map" resultClass="Qna">
		select
			custName
			, customerGrade
			, proImg
			, quesNo
			, quSubject
			, quViewcount
			, quCreateDate
			, proNo
		from
			(select
				row_number() over (order by Q.question_no desc) rn
				, C.customer_name			as custName
				, C.customer_grade			as customerGrade
				, P.product_img_big			as proImg
				, Q.question_no				as quesNo
				, Q.question_subject		as quSubject
				, Q.question_viewcount		as quViewcount
				, Q.create_date				as quCreateDate
				, Q.product_no				as proNo
			from
				product_questions Q, customers C, products P
			where
				Q.customer_no = C.customer_no
			and Q.product_no = P.product_no)
		where
			rn >= #begin# and rn &lt;= #end#
	</select>
	
	<select id="getSearchQnaCountsBySubject" parameterClass="string" resultClass="int">
		select
			count(*)	as cnt
		from
			product_questions
		where
			question_subject like '%' || #value# || '%'
	</select>
	
	<select id="getSearchQnaBySubject" parameterClass="map" resultClass="Qna">
		select
			custName
			, customerGrade
			, proImg
			, quesNo
			, quSubject
			, quViewcount
			, quCreateDate
			, proNo
		from
			(select
				row_number() over (order by Q.question_no desc) rn
				, C.customer_name			as custName
				, C.customer_grade			as customerGrade
				, P.product_img_big			as proImg
				, Q.question_no				as quesNo
				, Q.question_subject		as quSubject
				, Q.question_viewcount		as quViewcount
				, Q.create_date				as quCreateDate
				, Q.product_no				as proNo
			from
				product_questions Q, customers C, products P
			where
				Q.customer_no = C.customer_no
			and Q.product_no = P.product_no
			and question_subject like '%' || #keyword# || '%')
		where
			rn >= #begin# and rn &lt;= #end#
	</select>
	
	<select id="getSearchQnaCountsByName" parameterClass="string" resultClass="int">
		select
			count(*)	as cnt
		from
			product_questions Q, customers C, products P
		where
			C.customer_name like '%' || #value# || '%'
	</select>
	
	<select id="getSearchQnaByName" parameterClass="map" resultClass="Qna">
		select
			custName
			, customerGrade
			, proImg
			, quesNo
			, quSubject
			, quViewcount
			, quCreateDate
			, proNo
		from
			(select
				row_number() over (order by Q.question_no desc) rn
				, C.customer_name			as custName
				, C.customer_grade			as customerGrade
				, P.product_img_big			as proImg
				, Q.question_no				as quesNo
				, Q.question_subject		as quSubject
				, Q.question_viewcount		as quViewcount
				, Q.create_date				as quCreateDate
				, Q.product_no				as proNo
			from
				product_questions Q, customers C, products P
			where
				Q.customer_no = C.customer_no
			and Q.product_no = P.product_no
			and C.customer_name like '%' || #keyword# || '%')
		where
			rn >= #begin# and rn &lt;= #end#
	</select>
	
	<select id="getDetailQuestion" parameterClass="int" resultClass="Qna">
		select
			C.customer_name				as custName
			, Q.question_no				as quesNo
			, Q.question_subject		as quSubject
			, Q.question_contents		as quContents
			, Q.question_viewcount		as quViewcount
			, Q.create_date				as quCreateDate
		from
			product_questions Q, customers C
		where
			Q.customer_no = C.customer_no
		and Q.question_no = #value#
	</select>
	
	<select id="getThisAnswer" parameterClass="int" resultClass="Qna">
		select
			A.answer_subject		as awSubject
			, A.answer_contents		as awContents
			, A.answer_viewcount	as awViewcount
			, A.create_date			as awCreateDate
			, M.admin_account_id	as adminId
		from
			product_questions Q, product_answers A, admin_accounts M
		where
			A.question_no = Q.question_no
		and A.admin_account_no = M.admin_account_no
		and A.question_no = #value#
	</select>
	
	<select id="getPassword" parameterClass="int" resultClass="Qna">
		select
			question_password		as password
		from
			product_questions
		where
			question_no = #value#
	</select>
	
	<update id="countQuestionByNo" parameterClass="int">
		update
			product_questions
		set
			question_viewcount = question_viewcount + 1
		where
			question_no = #value#
	</update>
	
	<update id="countAnswerByNo" parameterClass="int">
		update
			product_answers
		set
			answer_viewcount = answer_viewcount + 1
		where
			question_no = #value#
	</update>
	
	<select id="getQuestionByNo" parameterClass="int">
		select 
			q.question_no as quesno,
			q.customer_no as custno,
			co.customer_name as custname,
			q.question_subject as qusubject,
			q.question_contents as qucoments,
			a.answer_contents as awsubject,
			q.question_password as password,
			q.create_date as qucreatedate,
			a.create_date as awcreatedate
		from
		product_questions Q, product_reviews R, review_comment C, customers CO, product_answers a
		where
			q.customer_no = r.customer_no
			and r.review_no = c.review_no
			and q.customer_no = co.customer_no
			and q.question_no = a.question_no
			and q.customer_no = #value#
	</select>

<!-- *qna [ 끝 ] ################################################################################################################## -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *review [ 시작 ] ################################################################################################################ -->

	<select id="getThisReviews" parameterClass="int" resultClass="Review">
		select
	 		  review_contents		as reviewContent
			, review_img			as reviewImg
			, product_no			as proNo
		from
			(select
				R.review_contents, R.review_img, P.product_no, ROW_NUMBER() over(order by R.review_grade desc) as rn
			from
				product_reviews R , products P
			WHERE
	 			P.product_no = R.product_no
	 		and P.product_no = #value#)
		where
			rn &lt;= 1
	</select>
	
	<select id="getThisGrade" parameterClass="int" resultClass="Review">
		select
			   nvl(trunc(avg(R.review_grade),1),0.0	) as grade
			  ,count(P.product_no) 					as reviewCount
		from
			products P, product_reviews R
		where
			P.product_no = R.product_no
		and P.product_no = #value#
	</select>
	
	<select id="getAllReviews" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
		from
			products P, categories C
		where
			P.category_no = C.category_no
	</select>
	
	<select id="getReviewsByCategory" parameterClass="int" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
		from
			products P, 
						(
						select
							category_no,
							category_name
						from
							categories
						start with 
							category_no = #categoryNo#
						connect by prior 
							category_no = main_category_no
						) C
		where
			P.category_no = C.category_no
	</select>
	
	<select id="getReviewsByProName" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
		from
			products P, categories C
		where
			P.category_no = C.category_no
		order by
			P.product_name
	</select>
	
	<select id="getReviewsByLowPrice" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
		from
			products P, categories C
		where
			P.category_no = C.category_no
		order by
			P.product_price
	</select>
	
	<select id="getReviewsByHighPrice" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
		from
			products P, categories C
		where
			P.category_no = C.category_no
		order by
			P.product_price desc
	</select>
	
	<select id="getReviewsByHighGrade" resultClass="Review">
		select
			  P.product_no								as proNo
			, P.product_name							as proName
			, P.product_price							as price
			, P.product_img_big							as proImg
			, C.category_name							as category
			, C.category_no								as categoryNo
			, nvl(trunc(avg(R.review_grade),1),0.0	) 	as grade
		from
			products P, categories C, product_reviews R
		where
			P.category_no = C.category_no
		and P.product_no = R.product_no
		group by
			  P.product_no			
			, P.product_name	
			, P.product_price	
			, P.product_img_big	
			, C.category_name
			, C.category_no
		order by
			grade desc
	</select>
	
	<select id="getReviewsByManys" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
			, count(P.product_no) 	as reviewCount
		from
			products P, categories C, product_reviews R
		where
			P.category_no = C.category_no
		and P.product_no = R.product_no
		group by
			  P.product_no			
			, P.product_name	
			, P.product_price	
			, P.product_img_big	
			, C.category_name
			, C.category_no
		order by
			reviewCount desc
	</select>
	
	<select id="getReviewsByBestSell" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
			, count(O.product_no) 	as orderCount
		from
			products P, categories C, order_detail O
		where
			P.category_no = C.category_no
		and P.product_no = O.product_no
		group by
			  P.product_no			
			, P.product_name	
			, P.product_price	
			, P.product_img_big	
			, C.category_name
			, C.category_no
		order by
			orderCount desc
	</select>
	
	<select id="getReviewsByHighSale" resultClass="Review">
		select
			  P.product_no			as proNo
			, P.product_name		as proName
			, P.product_price		as price
			, P.product_img_big		as proImg
			, C.category_name		as category
			, C.category_no			as categoryNo
		from
			products P, categories C
		where
			P.category_no = C.category_no
		order by
			P.product_discount desc
	</select>
	
	
	<insert id="addNewReview" parameterClass="Review">
		insert into
			product_reviews
				(review_no 
				,product_no 
				,customer_no 
				,review_contents
				,review_grade
				,review_img 
				,review_customer_weight 
				,review_customer_height 
				,review_customer_size)
		values
				(product_review_seq.nextval
				,#proNo#
				,#custNo#
				,#reviewContent#
				,#grade#
				,#reviewImg#
				,#custWeight#
				,#custheight#
				,#custSize# )
	</insert>
<!-- *review [ 끝 ] ############################################################################################################## -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- *CartItem [ 시작 ] ################################################################################################################ -->
	
	<insert id="addNewCartItem" parameterClass="map">
		insert into
			cart_items (customer_no, product_no, product_qty, product_color, product_size)
		values
			(#custNo#, #proNo#, #proQty#, #proColor#, #proSize#)
	</insert>
	
<!-- *CartItem [ 끝 ] ############################################################################################################## -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- ############################################################################################################################ -->
<!-- [ 송재호 ] ############################################################################################################## -->

	<select id="getProductReviewsByProNoOrderByGradeAndRange" resultClass="ProductReviews" parameterClass="map">
		select
			review_no as reviewNo
			,product_no as proNo
			,customer_no as custNo
			,review_contents as contents
			,review_recommend_cnt as recommendCnt
			,review_grade as grade
			,review_status as status
			,create_date as createDate
			,review_img as img
			,review_customer_weight as custWeight
			,review_customer_height as custHeight
			,review_customer_size as custSize
		from
			(select 
				row_number() over (order by review_grade desc) rn
				,review_no
				,product_no
				,customer_no
				,review_contents
				,review_recommend_cnt
				,review_grade
				,review_status
				,create_date
				,review_img
				,review_customer_weight
				,review_customer_height
				,review_customer_size
			from
				product_reviews
			where
				product_no = #proNo#)
		where
			rn >= #beginIndex# and rn &lt;= #endIndex#
	</select>


	<insert id="insertReviewLikeHistory" parameterClass="map">
		insert into
			review_recommend_history (review_no, customer_no)
		values
			(#reviewNo#, #custNo#)
	</insert>
	
	<delete id="deleteReviewLikeHistory" parameterClass="map">
		delete from
			review_recommend_history
		where
			review_no = #reviewNo#
			and customer_no = #custNo#
	</delete>

	<select id="getReviewHistoryByReviewNoAndCustNo" parameterClass="map" resultClass="ReviewRecommendHistory">
		select
			review_no as reviewNo
			,customer_no as custNo
		from
			review_recommend_history
		where
			review_no = #reviewNo#
			and customer_no = #custNo#
	</select>

	<select id="getProductReviewsByProNoOrderByNewAndRangeAndWithPhoto" parameterClass="map" resultClass="ProductReviews">
		select
			review_no as reviewNo
			,product_no as proNo
			,customer_no as custNo
			,review_contents as contents
			,review_recommend_cnt as recommendCnt
			,review_grade as grade
			,review_status as status
			,create_date as createDate
			,review_img as img
			,review_customer_weight as custWeight
			,review_customer_height as custHeight
			,review_customer_size as custSize
		from
			(select 
				row_number() over (order by create_date desc) rn
				,review_no
				,product_no
				,customer_no
				,review_contents
				,review_recommend_cnt
				,review_grade
				,review_status
				,create_date
				,review_img
				,review_customer_weight
				,review_customer_height
				,review_customer_size
			from
				product_reviews
			where
				product_no = #proNo#
				and review_img is not null)
		where
			rn >= #beginIndex# and rn &lt;= #endIndex#
	</select>
	
	<select id="getFourReviewImagesByProNo" parameterClass="int" resultClass="string">
		select
			review_img as img
		from (select 
					review_img, row_number ( ) over (order by create_date desc) as rn
				from
					product_reviews
				where
					product_no = #value#
					and review_img is not null)
		where 
			rn &lt;= 4
	</select>
	
	<select id="getSixReviewImagesByProNo" parameterClass="int" resultClass="string">
		select
			review_img as img
		from (select 
					review_img, row_number ( ) over (order by create_date desc) as rn
				from
					product_reviews
				where
					product_no = #value#
					and review_img is not null)
		where 
			rn &lt;= 6
	</select>
	
	<select id="getAllNoticeWithAllCols" resultClass="Notice">
		select
			A.notice_no as no
			,A.admin_account_no as adminNo
			,A.notice_subject as subject
			,A.notice_contents as contents
			,A.notice_viewcount as viewCount
			,A.notice_status as status
			,A.create_date as createDate
			,B.ADMIN_ACCOUNT_ID as adminId
		from 
			notices A, ADMIN_ACCOUNTS B
		where
			notice_status = '정상'
			and A.ADMIN_ACCOUNT_NO = B.ADMIN_ACCOUNT_NO
	</select>
	
	<update id="plusReviewLike" parameterClass="map">
		update
			product_reviews
		set
			review_recommend_cnt = review_recommend_cnt+1
		where
			product_no = #proNo#
			and customer_no = #custNo#
			and review_no = #reviewNo#
	</update>
	
	<update id="minusReviewLike" parameterClass="map">
		update
			product_reviews
		set
			review_recommend_cnt = review_recommend_cnt-1
		where
			product_no = #proNo#
			and customer_no = #custNo#
			and review_no = #reviewNo#
	</update>
	 
	<select id="getReviewLike" parameterClass="map" resultClass="int">
		select
			review_recommend_cnt as recommend
		FROM
			product_reviews
		where
			PRODUCT_NO = #proNo#
			and CUSTOMER_NO = #custNo#
			and review_no = #reviewNo#
	</select>
	
	<select id="getProductByNumber" parameterClass="int" resultClass="Product">
		select
			P.product_no as "no"
			,P.category_no as categoryNo
			,P.product_name as name
			,P.product_price as price
			,P.product_point as "point"
			,P.product_discount as discount
			,P.product_detail as detail
			,P.product_status as status
			,P.product_img_portrait_1 as imgPortrait1
			,P.product_img_portrait_2 as imgPortrait2
			,P.product_img_big as imgBig
			,S.product_color as color
			,S.product_size as "size"
			,S.product_qty as qty
		from
			products P, product_stock S
		where
			P.product_no = S.product_no
			and S.product_no = #value#
	</select>
<!-- [ 송재호 끝 ] ############################################################################################################## -->
</sqlMap>